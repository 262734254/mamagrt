//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.1433 版自动生成。
// 
#pragma warning disable 1591

namespace Tz888.BLL.SmsServer {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BusinessServiceSoapBinding", Namespace="http://service.nineorange.com")]
    public partial class BusinessServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback validateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBatchMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceivedMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTimelyMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTimelySendStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BusinessServiceService() {
            this.Url = global::Tz888.BLL.Properties.Settings.Default.Tz888_BLL_SmsServer_BusinessServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event validateUserCompletedEventHandler validateUserCompleted;
        
        /// <remarks/>
        public event modifyPasswordCompletedEventHandler modifyPasswordCompleted;
        
        /// <remarks/>
        public event sendBatchMessageCompletedEventHandler sendBatchMessageCompleted;
        
        /// <remarks/>
        public event getReceivedMsgCompletedEventHandler getReceivedMsgCompleted;
        
        /// <remarks/>
        public event getReceiptCompletedEventHandler getReceiptCompleted;
        
        /// <remarks/>
        public event sendTimelyMessageCompletedEventHandler sendTimelyMessageCompleted;
        
        /// <remarks/>
        public event getTimelySendStatusCompletedEventHandler getTimelySendStatusCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        public event sendMessageCompletedEventHandler sendMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("validateUserReturn")]
        public int validateUser(string account, string password) {
            object[] results = this.Invoke("validateUser", new object[] {
                        account,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void validateUserAsync(string account, string password) {
            this.validateUserAsync(account, password, null);
        }
        
        /// <remarks/>
        public void validateUserAsync(string account, string password, object userState) {
            if ((this.validateUserOperationCompleted == null)) {
                this.validateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateUserOperationCompleted);
            }
            this.InvokeAsync("validateUser", new object[] {
                        account,
                        password}, this.validateUserOperationCompleted, userState);
        }
        
        private void OnvalidateUserOperationCompleted(object arg) {
            if ((this.validateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateUserCompleted(this, new validateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("modifyPasswordReturn")]
        public int modifyPassword(string account, string oldPassword, string newPassword) {
            object[] results = this.Invoke("modifyPassword", new object[] {
                        account,
                        oldPassword,
                        newPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void modifyPasswordAsync(string account, string oldPassword, string newPassword) {
            this.modifyPasswordAsync(account, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void modifyPasswordAsync(string account, string oldPassword, string newPassword, object userState) {
            if ((this.modifyPasswordOperationCompleted == null)) {
                this.modifyPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyPasswordOperationCompleted);
            }
            this.InvokeAsync("modifyPassword", new object[] {
                        account,
                        oldPassword,
                        newPassword}, this.modifyPasswordOperationCompleted, userState);
        }
        
        private void OnmodifyPasswordOperationCompleted(object arg) {
            if ((this.modifyPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyPasswordCompleted(this, new modifyPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendBatchMessageReturn")]
        public int sendBatchMessage(string account, string password, string destmobile, string msgText) {
            object[] results = this.Invoke("sendBatchMessage", new object[] {
                        account,
                        password,
                        destmobile,
                        msgText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendBatchMessageAsync(string account, string password, string destmobile, string msgText) {
            this.sendBatchMessageAsync(account, password, destmobile, msgText, null);
        }
        
        /// <remarks/>
        public void sendBatchMessageAsync(string account, string password, string destmobile, string msgText, object userState) {
            if ((this.sendBatchMessageOperationCompleted == null)) {
                this.sendBatchMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBatchMessageOperationCompleted);
            }
            this.InvokeAsync("sendBatchMessage", new object[] {
                        account,
                        password,
                        destmobile,
                        msgText}, this.sendBatchMessageOperationCompleted, userState);
        }
        
        private void OnsendBatchMessageOperationCompleted(object arg) {
            if ((this.sendBatchMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBatchMessageCompleted(this, new sendBatchMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getReceivedMsgReturn")]
        public string getReceivedMsg(string account, string password, int param) {
            object[] results = this.Invoke("getReceivedMsg", new object[] {
                        account,
                        password,
                        param});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getReceivedMsgAsync(string account, string password, int param) {
            this.getReceivedMsgAsync(account, password, param, null);
        }
        
        /// <remarks/>
        public void getReceivedMsgAsync(string account, string password, int param, object userState) {
            if ((this.getReceivedMsgOperationCompleted == null)) {
                this.getReceivedMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceivedMsgOperationCompleted);
            }
            this.InvokeAsync("getReceivedMsg", new object[] {
                        account,
                        password,
                        param}, this.getReceivedMsgOperationCompleted, userState);
        }
        
        private void OngetReceivedMsgOperationCompleted(object arg) {
            if ((this.getReceivedMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceivedMsgCompleted(this, new getReceivedMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getReceiptReturn")]
        public string getReceipt(string account, string password, int taskID) {
            object[] results = this.Invoke("getReceipt", new object[] {
                        account,
                        password,
                        taskID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getReceiptAsync(string account, string password, int taskID) {
            this.getReceiptAsync(account, password, taskID, null);
        }
        
        /// <remarks/>
        public void getReceiptAsync(string account, string password, int taskID, object userState) {
            if ((this.getReceiptOperationCompleted == null)) {
                this.getReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptOperationCompleted);
            }
            this.InvokeAsync("getReceipt", new object[] {
                        account,
                        password,
                        taskID}, this.getReceiptOperationCompleted, userState);
        }
        
        private void OngetReceiptOperationCompleted(object arg) {
            if ((this.getReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptCompleted(this, new getReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendTimelyMessageReturn")]
        public int sendTimelyMessage(string account, string password, string sendDateTime, string destmobile, string msgText) {
            object[] results = this.Invoke("sendTimelyMessage", new object[] {
                        account,
                        password,
                        sendDateTime,
                        destmobile,
                        msgText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendTimelyMessageAsync(string account, string password, string sendDateTime, string destmobile, string msgText) {
            this.sendTimelyMessageAsync(account, password, sendDateTime, destmobile, msgText, null);
        }
        
        /// <remarks/>
        public void sendTimelyMessageAsync(string account, string password, string sendDateTime, string destmobile, string msgText, object userState) {
            if ((this.sendTimelyMessageOperationCompleted == null)) {
                this.sendTimelyMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTimelyMessageOperationCompleted);
            }
            this.InvokeAsync("sendTimelyMessage", new object[] {
                        account,
                        password,
                        sendDateTime,
                        destmobile,
                        msgText}, this.sendTimelyMessageOperationCompleted, userState);
        }
        
        private void OnsendTimelyMessageOperationCompleted(object arg) {
            if ((this.sendTimelyMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTimelyMessageCompleted(this, new sendTimelyMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getTimelySendStatusReturn")]
        public string getTimelySendStatus(string account, string password, string datetime_from, string datetime_to) {
            object[] results = this.Invoke("getTimelySendStatus", new object[] {
                        account,
                        password,
                        datetime_from,
                        datetime_to});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTimelySendStatusAsync(string account, string password, string datetime_from, string datetime_to) {
            this.getTimelySendStatusAsync(account, password, datetime_from, datetime_to, null);
        }
        
        /// <remarks/>
        public void getTimelySendStatusAsync(string account, string password, string datetime_from, string datetime_to, object userState) {
            if ((this.getTimelySendStatusOperationCompleted == null)) {
                this.getTimelySendStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTimelySendStatusOperationCompleted);
            }
            this.InvokeAsync("getTimelySendStatus", new object[] {
                        account,
                        password,
                        datetime_from,
                        datetime_to}, this.getTimelySendStatusOperationCompleted, userState);
        }
        
        private void OngetTimelySendStatusOperationCompleted(object arg) {
            if ((this.getTimelySendStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTimelySendStatusCompleted(this, new getTimelySendStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getUserInfoReturn")]
        public string getUserInfo(string account, string password) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        account,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string account, string password) {
            this.getUserInfoAsync(account, password, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string account, string password, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        account,
                        password}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.nineorange.com", ResponseNamespace="http://service.nineorange.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sendMessageReturn")]
        public int sendMessage(string account, string password, string destmobile, string msgText) {
            object[] results = this.Invoke("sendMessage", new object[] {
                        account,
                        password,
                        destmobile,
                        msgText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sendMessageAsync(string account, string password, string destmobile, string msgText) {
            this.sendMessageAsync(account, password, destmobile, msgText, null);
        }
        
        /// <remarks/>
        public void sendMessageAsync(string account, string password, string destmobile, string msgText, object userState) {
            if ((this.sendMessageOperationCompleted == null)) {
                this.sendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendMessageOperationCompleted);
            }
            this.InvokeAsync("sendMessage", new object[] {
                        account,
                        password,
                        destmobile,
                        msgText}, this.sendMessageOperationCompleted, userState);
        }
        
        private void OnsendMessageOperationCompleted(object arg) {
            if ((this.sendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendMessageCompleted(this, new sendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void validateUserCompletedEventHandler(object sender, validateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void modifyPasswordCompletedEventHandler(object sender, modifyPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void sendBatchMessageCompletedEventHandler(object sender, sendBatchMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendBatchMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBatchMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getReceivedMsgCompletedEventHandler(object sender, getReceivedMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceivedMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceivedMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getReceiptCompletedEventHandler(object sender, getReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void sendTimelyMessageCompletedEventHandler(object sender, sendTimelyMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTimelyMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTimelyMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTimelySendStatusCompletedEventHandler(object sender, getTimelySendStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTimelySendStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTimelySendStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void sendMessageCompletedEventHandler(object sender, sendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591